'use strict';class AtlasStitcher{constructor(){this.canvas=document.createElement("canvas");this.ctx=this.canvas.getContext("2d")}draw(a,c,d,l){const f=a.height,g=a.width;var e=c.width;const h=c.height,k=d.padding;d=d.cellSize;const b=d-2*k,n=e+b-1-(e+b-1)%b,p=h+b-1-(h+b-1)%b;this.canvas.width=e;this.canvas.height=h;this.ctx.clearRect(0,0,e,h);e=0;for(const m of c.cellIndexList){if(m!=c.transparentIndex){const q=e%(n/b)*b,r=p-b*(1+intdiv(e,n/b))-(p-h),t=m%(g/d)*d+k,u=f-d*(1+intdiv(m,g/d))+k;this.ctx.drawImage(a,t,u,b,b,q,r,b,b)}e++}l.src=this.canvas.toDataURL("image/png")}}async function getJson(a){return await Promise.all(a.map(c=>fetch(`/cdn/Monobehaviour/${c}.json`)))}async function collectSprites(a){const c=document.createElement("select"),d={};for(const l of a){a=await l.json();const f=a.m_Name;d[f]=a;for(const g of a.textureDataList)c.add(new Option(g.name,`${f}:${g.name}`))}return{manifest:d,select:c}}document.querySelectorAll(".atlas-gallery").forEach(async a=>{var c=a.dataset.sprites.split(",");const d=a.querySelector("img");c=await getJson(c);const {manifest:l,select:f}=await collectSprites(c);a.appendChild(f);f.addEventListener("change",()=>{const g=f.value.split(":"),e=l[g[0]],h=e.textureDataList.find(b=>b.name==g[1]),k=new Image;k.onload=()=>{window.atlasSticher=window.atlasSticher||new AtlasStitcher;atlasSticher.draw(k,h,e,d)};k.src=`/cdn/Texture2D/${h.atlasName}.png`});f.dispatchEvent(new Event("change"))});function intdiv(a,c){return Math.floor(a/c)};